# Generated by Django 4.2.8 on 2023-12-28 08:03

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(help_text='Required. 30 characters or fewer. Letters, numbers and @/./+/-/_ characters', max_length=75, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$'), 'Enter a valid username.', 'invalid')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z]{1,50}')], verbose_name='first_name')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z]{1,50}')], verbose_name='last_name')),
                ('name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z]{1,50}')], verbose_name='name')),
                ('email', models.EmailField(blank=True, max_length=70, null=True, unique=True)),
                ('is_staff', models.BooleanField(default=0)),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('phone_verified', models.BooleanField(default=True)),
                ('email_verified', models.BooleanField(default=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('otp', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator('^[0-9]{4}$')])),
                ('onetime_token', models.CharField(blank=True, default=None, max_length=254, null=True, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('bus_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('total_seats', models.IntegerField(default=None, null=True)),
                ('type', models.CharField(choices=[('AC', 'AC'), ('Non AC', 'Non AC')], default='Non AC', max_length=30)),
                ('is_active', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'bus',
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='delete')),
            ],
            options={
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='Bus_Search_History',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('searched_on', models.DateTimeField(auto_now_add=True)),
                ('search_text', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='bus_search_user', related_query_name='bus_search_user_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'bus_search_history',
            },
        ),
        migrations.CreateModel(
            name='Bus_Details',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('Waiting', 'Waiting'), ('Start', 'Start'), ('On The Way', 'On The Way'), ('Completed', 'Completed'), ('Canceled', 'Canceled')], default='Waiting', max_length=30)),
                ('number_seats_avialable', models.IntegerField(default=None, null=True)),
                ('source', models.CharField(blank=True, max_length=100)),
                ('stops', models.CharField(blank=True, max_length=255, null=True)),
                ('destination', models.CharField(blank=True, max_length=100)),
                ('date_of_journey', models.DateTimeField(auto_now=True, null=True)),
                ('departure', models.DateTimeField(auto_now=True, null=True)),
                ('arrival', models.DateTimeField(auto_now=True, null=True)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='bus_details_id', related_query_name='bus_id', to='users.bus')),
            ],
            options={
                'db_table': 'bus_details',
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('Number_of_passengers', models.IntegerField(default=None, null=True)),
                ('type', models.CharField(choices=[('Block Seats', 'Block Seats'), ('Book Seats', 'Book Seats')], default='Block Seats', max_length=30)),
                ('paid', models.BooleanField(default=True)),
                ('paid_amount', models.IntegerField(default=0)),
                ('pickup_point', models.CharField(blank=True, max_length=100)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='booked_bus_id', related_query_name='booked_bus_bus_id', to='users.bus')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_id', related_query_name='user_user_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'booking',
            },
        ),
        migrations.CreateModel(
            name='Blocking_Bookig_History',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('type', models.CharField(choices=[('Block Seats', 'Block Seats'), ('Book Seats', 'Book Seats')], default='Block Seats', max_length=30)),
                ('Number_of_passengers', models.IntegerField(default=None, null=True)),
                ('paid_amount', models.IntegerField(default=0)),
                ('pickup_point', models.CharField(blank=True, max_length=100)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='block_book_bus_id', related_query_name='block_book_bus_bus_id', to='users.bus')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='block_book_user', related_query_name='block_book_user_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'blocking_bookig_history',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.DO_NOTHING, related_name='role_id', related_query_name='user_role', to='users.roles'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
